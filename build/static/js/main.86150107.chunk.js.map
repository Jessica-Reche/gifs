{"version":3,"sources":["services/getGifs.js","context/GifsContext.js","hooks/useGifs.js","components/Gif/index.js","components/ListOfGifs/ListOfGifs.js","pages/Home/index.js","components/Spinner/index.js","pages/SearchResults/index.js","pages/Details/index.js","hooks/useGlobal.js","context/StaticContext.js","App.js","index.js"],"names":["apiKey","getGifs","keyword","apiURL","fetch","then","res","json","response","data","Array","isArray","map","image","images","title","id","url","downsized_medium","Context","React","createContext","GifsContextProvider","children","useState","gifs","setGifs","Provider","value","useGifs","loading","setLoading","useContext","GifsContext","console","log","useEffect","localStorage","getItem","setItem","Gif","className","to","alt","src","ListOfGifs","POPULAR_GIFS","Home","setKeyword","useLocation","pushLocation","onSubmit","evt","preventDefault","placeholder","onChange","target","type","gif","Spinner","SearchResults","params","Details","find","singleGif","name","App","StaticContext","nombre","actividad_terminada","component","path","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.86150107.chunk.js","sourcesContent":["\nconst apiKey = 'o98YzurnsGVaiynPnBvBFQo6dwnsZMRy';\n \nexport default function getGifs({keyword = 'witch'}={}) {\n    const apiURL = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${keyword}&limit=10&offset=0&rating=g&lang=es`;\n\n   return fetch(apiURL)\n        .then(res => res.json())\n        .then(response => {\n            const { data = [] } = response;\n            if (Array.isArray(data)) {\n                const gifs = data.map(image =>{\n\n                    const {images, title, id} = image;\n                    const {url} = images.downsized_medium;\n                    return {title, id, url}\n                } );\n                return gifs;\n            }\n        })\n}","\nimport React, {useState} from 'react';\nconst Context = React.createContext();\nexport function GifsContextProvider({children}) {\n  const [gifs, setGifs] = useState([]);\n  return (\n    <Context.Provider value={{gifs, setGifs}}>\n      {children}\n    </Context.Provider>\n  )\n}\n\n\n\n\nexport default Context;","import {useContext, useEffect, useState } from \"react\";\n\nimport getGifs from \"../services/getGifs\";\nimport GifsContext from \"../context/GifsContext\";\n\n\n\nexport function useGifs ({keyword}={keyword: null}) {\n    const [loading, setLoading] = useState(false);\n    const {gifs, setGifs} = useContext(GifsContext);\n\nconsole.log(keyword);\n\n\n\n    useEffect(() => {\n        setLoading(true);\n        //recuperamos la keyword del localStorage\n        const keywordToUse = keyword || localStorage.getItem('lastKeyword') || 'random';\n        getGifs({ keyword: keywordToUse }).then(gifs => {\n            setGifs(gifs)\n            setLoading(false);\n            //guardamos la keyword en el  localStorage\n            localStorage.setItem('lastKeyword', keyword)\n\n         \n        });\n\n    }, [keyword, setGifs]);\n\n    return {loading, gifs}\n\n\n}\n\n\n\n\n\n","import React from 'react'\nimport { Link } from 'wouter'\nimport './Gif.css'\n\nexport default function Gif({ title, id, url }) {\n    return (\n        <div className='Gif'>\n\n            <Link to={`/gif/${id}`} className='Gif-link'>\n             <h4>{title}</h4>\n             \n              <img loading='lazy' alt={title} src={url}/>\n            </Link>\n        </div>\n    )\n}\n\n","\nimport Gif from \"../Gif\";\nimport \"./ListOfGifs.css\";\n\n\nexport default function ListOfGifs({ gifs }) {\n\n  return ( \n  <div className=\"ListOfGifs\">\n    {\n    gifs.map(({ id, title, url }) =>\n    <Gif key={id} id={id} title={title} url={url} />)\n    }\n  </div>)\n\n\n\n}\n","import './home.css';\nimport { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { useGifs } from \"../../hooks/useGifs\";\nimport ListOfGifs from \"../../components/ListOfGifs/ListOfGifs\";\nconst POPULAR_GIFS = [\"Belugas\", \"Zorros\", \"Gatos\"];\n\nconst Home = () => {\n    const [keyword, setKeyword] = useState('');\n    const [path, pushLocation] = useLocation();\n    const  {loading, gifs} = useGifs();\n\n\n    //const {loading, gifs} = useGifs()\n    const handleSubmit = evt =>{\n        evt.preventDefault();\n            //navegar a otra ruta\n           pushLocation(`/search/${keyword}`);\n    }\n    const handleChange = evt =>{\n        setKeyword(evt.target.value)\n\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n\n                <input placeholder=\"Search a gif here...\" onChange={handleChange} type=\"text\" value={keyword} />\n                <button> Buscar</button>\n            </form>\n            <h3 className=\"App-title\">ÚLtima búsqueda</h3>\n            <ListOfGifs gifs={gifs} />\n            <ul>\n                {POPULAR_GIFS.map((gif) => (\n                    <li key={gif}>\n                        <Link to={`/search/${gif}`}>\n                            Gifs de {gif}\n                        </Link>\n                    </li>\n\n                ))}\n\n            </ul>\n\n        </>\n    )\n}\n\nexport default Home;","\nimport './styles.css';\n\nexport default function Spinner () {\n  return <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n}","\nimport ListOfGifs from \"../../components/ListOfGifs/ListOfGifs\";\nimport Spinner from \"../../components/Spinner\";\nimport {useGifs} from '../../hooks/useGifs';\n\n\n\n\nconst SearchResults = ({ params }) => {\n\n  const { keyword } = params;\n  const {loading, gifs} = useGifs({keyword})\n \n  return <>\n  {loading\n  ? <Spinner/>\n  :<ListOfGifs gifs={gifs} />\n    \n}\n  </>\n}\n\nexport default SearchResults;","\nimport Gif from '../../components/Gif';\nimport { useGlobalGifs } from '../../hooks/useGlobal';\n\n\n\nconst Details = ({params}) => {\n\n    const gifs = useGlobalGifs();\n    console.log({gifs});\n    const gif = gifs.find(singleGif => singleGif.id === params.id);\n    console.log({gif});\n\n\n\n\n  return (\n    \n    <Gif {...gif} />\n  )\n}\n\nexport default Details;\n","import GifsContext from \"../context/GifsContext\";\nimport {useContext} from \"react\";\t\n\n\nexport function useGlobalGifs () {\n    const {gifs} = useContext(GifsContext);\n    return gifs;\n}","\nimport React from 'react';\nconst  Context = React.createContext({name: \"Jessica\"});\n\nexport default Context;","import \"./styles.css\";\nimport { Link, Route } from \"wouter\";\nimport Home from \"./pages/Home\";\nimport SearchResults from \"./pages/SearchResults\";\nimport Details from \"./pages/Details\";\nimport StaticContext from \"./context/StaticContext\";\nimport { GifsContextProvider } from \"./context/GifsContext\";\n\n\nexport default function App() {\n  return (\n    <StaticContext.Provider  value={{nombre: 'Jessi', actividad_terminada: true}}>\n    <div className=\"App\">\n\n      <section className=\"App-content\">\n          <Link to=\"/\">\n           <img className=\"App-logo\" src=\"https://i.ibb.co/kB9NKn8/logo.png\" alt=\"logo\" />\n           </Link>\n            <GifsContextProvider>\n           <Route component={Home} path=\"/\"/>\n           <Route component={SearchResults}  path=\"/search/:keyword\" />\n           <Route path=\"/gif/:id\" component={Details} />\n            </GifsContextProvider>\n      </section>\n    </div>\n    </StaticContext.Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}